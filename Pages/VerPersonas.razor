@page "/verPersonas"

@using ElmerGonzalez_PruebaTectica.Data
@inject PersonaService personaService
@inject NavigationManager UriHelper

<h1>Ver Personas</h1>

<p>Esta es una tabla de las personas que estan en la base de datos</p>

@if (personas == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Fecha de Nacimiento</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var persona in personas)
            {
                <tr>
                    <td>@persona.Id</td>
                    <td>@persona.Nombre</td>
                    <td>@persona.FechaNacimiento.ToShortDateString()</td>
                    <td>
                        <a class="btn btn-primary" href="/editarPersona/@persona.Id">Editar</a> 
                        <button type="button" class="btn btn-danger" @onclick="() => EliminarPersona(persona.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Persona[] personas;

    protected override async Task OnInitializedAsync()
    {
        personas = await personaService.GetPersonasAsync();
    }

    private void EliminarPersona(int Id)
    {
        bool eliminada = personaService.DeletePersona(Id);

        UriHelper.NavigateTo(UriHelper.Uri, forceLoad: true);
    }
}
